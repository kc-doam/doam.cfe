#Область ПрограммныйИнтерфейс

// Записывает отметку времени при записи объекта.
//
// Параметры:
//   Объект - Произвольный - записываемый объект.
//   КлассОбъекта - Строка - "СсылочныйОбъект", "НаборЗаписей", "УдалениеОбъекта".
//   Источник - ОпределяемыйТип.ИсточникиОтметокВремени - источник, соответствующий отправителю.
//   ОтметкаВремени - ОпределяемыйТип.ОтметкаВремени - отметка времени записываемых данных для установки.
//
Процедура ПриЗаписиОбъекта(Объект, КлассОбъекта,
	Знач Источник = Неопределено, Знач ОтметкаВремени = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Получим источник и отметку времени из дополнительных свойств, если они не переданы явно.
	ВозможныДополнительныеСвойства =
		КлассОбъекта <> "УдалениеОбъекта"
		И СтрНайти(XMLТип(ТипЗнч(Объект)).ИмяТипа, "Ref.") = 0;
	Если ВозможныДополнительныеСвойства Тогда
		Если Источник = Неопределено
			И Объект.ДополнительныеСвойства.Свойство("Источник") Тогда
			Источник = Объект.ДополнительныеСвойства.Источник;
		КонецЕсли;
		Если ОтметкаВремени = Неопределено
			И Объект.ДополнительныеСвойства.Свойство("ОтметкаВремени") Тогда
			ОтметкаВремени = Объект.ДополнительныеСвойства.ОтметкаВремени;
		КонецЕсли;
	КонецЕсли;
	
	РегистрируемыеДанные = ?(КлассОбъекта = "УдалениеОбъекта"
		Или СтрНайти(XMLТип(ТипЗнч(Объект)).ИмяТипа, "Object.") <> 0,
		Объект.Ссылка,
		Объект);
	ИдентификаторОбъектаМетаданных = Неопределено;
	Ключ = Неопределено;
	Установить(РегистрируемыеДанные, ОтметкаВремени);
	
КонецПроцедуры

// Возвращает текущую отметку времени строкой, совместимой с определяемым типом ОтметкаВремени.
//
Функция Текущая() Экспорт
	
	ОтметкаЧислом = ТекущаяУниверсальнаяДатаВМиллисекундах();
	ОтметкаДатой = Дата(1, 1, 1) + Цел(ОтметкаЧислом / 1000);
	Миллисекунд = ОтметкаЧислом % 1000;
	
	Текущая = Формат(ОтметкаДатой, "ДФ=yyyyMMddHHmmss")
		+ Формат(Миллисекунд, "ЧЦ=3; ЧН=000; ЧВН=; ЧГ=0");
		
	Возврат Текущая;
	
КонецФункции

// Добавляет запись с текущей отметкой времени в соответствующий данным регистр сведений.
//
// Параметры:
//   Данные - ЛюбаяСсылка - данные, для которых следует установить
//     отметку времени.
//   ОтметкаВремени - ОпределяемыйТип.ОтметкаВремени - устанавливаемая отметка. Если не указана, 
//     используется текущая.
//
Процедура Установить(Данные, ОтметкаВремени = Неопределено) Экспорт
	
	Если ОтметкаВремени = Неопределено Тогда
		ОтметкаВремени = Текущая();
	КонецЕсли;
	
	РегистрыСведений.ОтметкиВремениСсылочныхДанных.УстановитьОтметкуВремени(
		Данные,
		ОтметкаВремени);
	
КонецПроцедуры

// Возвращает отметку времени по дате.
//
// Параметры:
//   Дата - Дата - дата и время в часовом поясе сеанса.
//
// Возвращаемое значение:
//   ОпределяемыйТип.ОтметкаВремени - отметка времени, соответствующая дате.
//
Функция ОтметкаВремениПоДате(Дата) Экспорт
	
	УниверсальнаяДата = УниверсальноеВремя(Дата, ЧасовойПоясСеанса());
	ОтметкаВремени = ОтметкаВремениПоУниверсальнойДате(УниверсальнаяДата);
		
	Возврат ОтметкаВремени;
	
КонецФункции

// Возвращает отметку времени по дате.
//
// Параметры:
//   Дата - Дата - универсальные дата и время.
//
// Возвращаемое значение:
//   ОпределяемыйТип.ОтметкаВремени - отметка времени, соответствующая дате.
//
Функция ОтметкаВремениПоУниверсальнойДате(УниверсальнаяДата) Экспорт
	
	ОтметкаВремени = Формат(УниверсальнаяДата, "ДФ=yyyyMMddHHmmss") + "000";
		
	Возврат ОтметкаВремени;
	
КонецФункции

// Возвращает отметку времени по дате.
//
// Параметры:
//   УниверсальнаяДатаВМиллисекундах - Число - универсальная дата в миллисекундах.
//
// Возвращаемое значение:
//   ОпределяемыйТип.ОтметкаВремени - отметка времени, соответствующая универсальной дате в миллисекундах.
//
Функция ОтметкаВремениПоУниверсальнойДатеВМиллисекундах(УниверсальнаяДатаВМиллисекундах) Экспорт
	
	ОтметкаДатой = Дата(1, 1, 1) + Цел(УниверсальнаяДатаВМиллисекундах / 1000);
	Миллисекунд = УниверсальнаяДатаВМиллисекундах % 1000;
	
	ОтметкаВремени = Формат(ОтметкаДатой, "ДФ=yyyyMMddHHmmss")
		+ Формат(Миллисекунд, "ЧЦ=3; ЧН=000; ЧВН=; ЧГ=0");
		
	Возврат ОтметкаВремени;
	
КонецФункции

// Возвращает дату, соответствующую отметке времени.
//
// Параметры:
//   ОтметкаВремени - ОпределяемыйТип.ОтметкаВремени - отметка времени.
//
// Возвращаемое значение:
//   Дата - дата и время в часовом поясе сеанса.
//
Функция ДатаПоОтметкеВремени(ОтметкаВремени) Экспорт
	
	УниверсальнаяДата = УниверсальнаяДатаПоОтметкеВремени(ОтметкаВремени);
	РазностьДат = ТекущаяДатаСеанса() - ТекущаяУниверсальнаяДата();
	Дата = УниверсальнаяДата + РазностьДат;
	
	Возврат Дата;
	
КонецФункции

// Возвращает универсальную дату, соответствующую отметке времени.
//
// Параметры:
//   ОтметкаВремени - ОпределяемыйТип.ОтметкаВремени - отметка времени.
//
// Возвращаемое значение:
//   Дата - универсальные дата и время.
//
Функция УниверсальнаяДатаПоОтметкеВремени(ОтметкаВремени) Экспорт
	
	Год = Число(Лев(ОтметкаВремени, 4));
	Месяц = Число(Сред(ОтметкаВремени, 5, 2));
	День = Число(Сред(ОтметкаВремени, 7, 2));
	Час = Число(Сред(ОтметкаВремени, 9, 2));
	Минута = Число(Сред(ОтметкаВремени, 11, 2));
	Секунда = Число(Сред(ОтметкаВремени, 13, 2));
	УниверсальнаяДата = Дата(Год, Месяц, День, Час, Минута, Секунда);
	
	Возврат УниверсальнаяДата;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
