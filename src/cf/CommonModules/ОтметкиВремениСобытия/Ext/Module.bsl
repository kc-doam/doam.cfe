#Область ПрограммныйИнтерфейс

Процедура ОтметкиВремениПриЗаписиСсылочныхОбъектов(Объект, Отказ) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОтметкиВремени") Тогда
		Возврат;
	КонецЕсли;
	Если МиграцияПриложенийПереопределяемый.ЭтоЗагрузка(Объект) Тогда
		Возврат;
	КонецЕсли;
		
	ОтметкиВремени.ПриЗаписиОбъекта(Объект, "СсылочныйОбъект");
	
КонецПроцедуры

Процедура ОтметкиВремениПередУдалениемСсылочныхОбъектов(Объект, Отказ) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОтметкиВремени") Тогда
		Возврат;
	КонецЕсли;
	Если МиграцияПриложенийПереопределяемый.ЭтоЗагрузка(Объект) Тогда
		Возврат;
	КонецЕсли;
	
	УдалениеОбъекта = Новый УдалениеОбъекта(Объект.Ссылка);
	ОтметкиВремени.ПриЗаписиОбъекта(УдалениеОбъекта, "УдалениеОбъекта");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОтметкиВремениИзмененияСведенийПисем(Источник, Отказ, Замещение) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОтметкиВремени") Тогда
		Возврат;
	КонецЕсли;
	Если МиграцияПриложенийПереопределяемый.ЭтоЗагрузка(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	МассивТиповПисьма = Новый Массив;
	МассивТиповПисьма.Добавить(Тип("ДокументСсылка.ВходящееПисьмо"));
	МассивТиповПисьма.Добавить(Тип("ДокументСсылка.ИсходящееПисьмо"));
	
	Для каждого ЭлементОтбора Из Источник.Отбор Цикл
		
		ЗначениеЭлементаОтбора = ЭлементОтбора.Значение;
		
		Если (ЭлементОтбора.Имя = "Объект" Или ЭлементОтбора.Имя = "Документ") 
			И (МассивТиповПисьма.Найти(ТипЗнч(ЗначениеЭлементаОтбора)) <> Неопределено
			И ЗначениеЗаполнено(ЗначениеЭлементаОтбора)) Тогда
			
			УчетнаяЗапись = МП_СлужебныйПовтИспНаВремяВызова.УчетнаяЗаписьПисьма(ЗначениеЭлементаОтбора);
			
			РегистрыСведений.ОтметкиВремениИзмененияСведенийПисем.ДобавитьЗапись(УчетнаяЗапись, ЗначениеЭлементаОтбора);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтметкиВремениИзмененияПисем(Источник, Отказ, Замещение) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОтметкиВремени") Тогда
		Возврат;
	КонецЕсли;
	Если МиграцияПриложенийПереопределяемый.ЭтоЗагрузка(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	РегистрыСведений.ОтметкиВремениИзмененияСведенийПисем.ДобавитьЗапись(Источник.УчетнаяЗапись, Источник.Ссылка);
	
КонецПроцедуры

Процедура ОтметкиВремениИзмененияЦветаИФлага(Источник, Отказ, Замещение) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОтметкиВремени") Тогда
		Возврат;
	КонецЕсли;
	Если МиграцияПриложенийПереопределяемый.ЭтоЗагрузка(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ЭлементОтбора Из Источник.Отбор Цикл
		
		ЗначениеЭлементаОтбора = ЭлементОтбора.Значение;
		
		Если (ЭлементОтбора.Имя = "Объект" Или ЭлементОтбора.Имя = "Событие")
			И ЗначениеЗаполнено(ЗначениеЭлементаОтбора) Тогда
			ОтметкиВремени.ПриЗаписиОбъекта(ЗначениеЭлементаОтбора, "СсылочныйОбъект");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтметкиВремениИзмененияНастроекОбменаСМобильным(Источник, Отказ, Замещение) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОтметкиВремени") Тогда
		Возврат;
	КонецЕсли;
	Если МиграцияПриложенийПереопределяемый.ЭтоЗагрузка(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ЭлементОтбора Из Источник.Отбор Цикл
		
		ЗначениеЭлементаОтбора = ЭлементОтбора.Значение;
		
		Если ЭлементОтбора.Имя = "Настройка"
			И ЗначениеЗаполнено(ЗначениеЭлементаОтбора) Тогда
			ОтметкиВремени.ПриЗаписиОбъекта(ЗначениеЭлементаОтбора, "СсылочныйОбъект");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтметкиВремениИзмененияМаксимальногоРазмераФайлаПриЗаписи(Источник, Отказ) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОтметкиВремени") Тогда
		Возврат;
	КонецЕсли;
	Если МиграцияПриложенийПереопределяемый.ЭтоЗагрузка(Источник) Тогда
		Возврат;
	КонецЕсли;

	ТипНастройкиМаксимальныйРазмерВложения =
		Перечисления.ОбменСМобильнымиТипыНастроекПользователей.МаксимальныйРазмерВложения;
		
	РегистрыСведений.ОтметкиВремениСсылочныхДанных.УстановитьОтметкуВремени(ТипНастройкиМаксимальныйРазмерВложения,
		ОтметкиВремени.Текущая());
	
КонецПроцедуры

Процедура ОтметкиВремениИзмененияСостоянийПриглашенияНаМероприятие(Источник, Отказ, Замещение) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОтметкиВремени") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеМероприятиями") Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ЭлементОтбора Из Источник.Отбор Цикл
		
		Если ЭлементОтбора.Имя = "Исполнитель" Тогда
			Исполнитель = ЭлементОтбора.Значение;
		КонецЕсли;
		
		Если ЭлементОтбора.Имя = "Мероприятие" Тогда
			Мероприятие = ЭлементОтбора.Значение;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Мероприятие) Тогда
		
		Если ЗначениеЗаполнено(Исполнитель) Тогда
			РегистрыСведений.МП_ИзмененныеСостоянияПриглашенийНаМероприятия.ДобавитьЗапись(Исполнитель, Мероприятие);
		Иначе
			Для Каждого Запись Из Источник Цикл
				РегистрыСведений.МП_ИзмененныеСостоянияПриглашенийНаМероприятия.ДобавитьЗапись(Запись.Исполнитель, Мероприятие);
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура ОтметкиВремениИзмененияТрудозатрат(Источник, Отказ, Замещение) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОтметкиВремени") Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Для каждого ЭлементОтбора Из Источник.Отбор Цикл
		
		Если ЭлементОтбора.Имя = "Пользователь" Тогда
			Пользователь = ЭлементОтбора.Значение;
		КонецЕсли;
		
		Если ЭлементОтбора.Имя = "Проект" Тогда
			Проект = ЭлементОтбора.Значение;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Пользователь) И ЗначениеЗаполнено(Проект) Тогда
		РегистрыСведений.МП_СинхронизацияПроектов.СинхронизироватьПроектПриНеобходимости(Пользователь, Проект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
