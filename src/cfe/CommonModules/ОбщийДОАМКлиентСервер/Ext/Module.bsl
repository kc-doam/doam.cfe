
Функция ПолучитьИндексПоИмени(Знач Имя) Экспорт
	ИмяДлина = СтрДлина(Имя);
	ПозицияСпецСимвола = СтрНайти(Имя, "_", НаправлениеПоиска.СКонца);
	Попытка Возврат Цел(Прав(Имя, ИмяДлина - ПозицияСпецСимвола));
	Исключение Возврат 0;
	КонецПопытки;
КонецФункции

Функция ПолучитьЭлементПоИндексу(Форма, Индекс = Неопределено, ШаблонИмени) Экспорт
	Элемент = Форма.Элементы.Найти(ШаблонИмени + ?(Индекс = Неопределено, "", "_" + Индекс));
	Если Элемент = Неопределено И Индекс = 0 Тогда
		Элемент = Форма.Элементы.Найти(ШаблонИмени);
	КонецЕсли;
	Возврат Элемент;
КонецФункции

Процедура НайтиКомандуПоШаблонуИУстановитьВидимость(ГруппаПоиска, ШаблонПоиска, Состояние) Экспорт
	Для Каждого Элемент Из ГруппаПоиска.ПодчиненныеЭлементы Цикл
		Если ТипЗнч(Элемент) = Тип("КнопкаФормы") И СтрНайти(Элемент.Имя, ШаблонПоиска) <> 0 Тогда
			Элемент.Доступность = Состояние;
		ИначеЕсли ТипЗнч(Элемент) = Тип("ГруппаФормы") Тогда
			НайтиКомандуПоШаблонуИУстановитьВидимость(Элемент, ШаблонПоиска, Состояние);
		ИначеЕсли ТипЗнч(Элемент) = Тип("ПолеФормы") Тогда
			НайтиКомандуПоШаблонуИУстановитьВидимость(Элемент.КонтекстноеМеню, ШаблонПоиска, Состояние)
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ДобавитьСтроку(Форма, ТаблицаИсточникДанных, ГруппаИсточник, МаксКоличествоСтрок = Неопределено, СкрытьЗаголовок = Истина) Экспорт
	Строка = Неопределено;
	Если ТаблицаИсточникДанных.Количество() <> МаксКоличествоСтрок Тогда
		Строка = ТаблицаИсточникДанных.Добавить();
		Индекс = ТаблицаИсточникДанных.Количество() - 1;
		ГруппаКопии = ПолучитьЭлементПоИндексу(Форма, Индекс, ГруппаИсточник.Имя);
		Если ГруппаКопии <> Неопределено Тогда
			ГруппаКопии.Видимость = Истина;
		Иначе
			ГруппаКопии = СкопироватьЭлемент(Форма, ГруппаИсточник, Индекс, СкрытьЗаголовок);
			#Если Не Сервер Тогда
				ВызватьИсключение("Создавать элементы формы можно только в серверной процедуре!" + Символы.ПС + ОписаниеОшибки());
			#КонецЕсли
		КонецЕсли;
		НайтиКомандуПоШаблонуИУстановитьВидимость(ГруппаКопии, "Удалить", Истина);
		Форма.Модифицированность = Истина;
	КонецЕсли;
	Возврат Строка;
КонецФункции

Функция СкопироватьЭлемент(Форма, Источник, Индекс, СкрытьЗаголовок, Группа = Неопределено)
	Если Группа = Неопределено Тогда
		Группа = Форма.Элементы.Найти(Источник.Родитель.Имя);
		ЭтоРекурсия = Ложь;
	Иначе
		ЭтоРекурсия = Истина;
	КонецЕсли;
	Копия = Форма.Элементы.Добавить(Источник.Имя + "_" + Индекс, ТипЗнч(Источник), Группа);
	Если ТипЗнч(Источник) = Тип("ГруппаФормы") Тогда
		СкопироватьГруппуФормыБезЭлементов(Форма, Источник, Копия);
		Если ЭтоРекурсия = Ложь Тогда
			Копия.Видимость = Ложь;
		КонецЕсли;
		СкопироватьПодчиненныеЭлементы(Форма, Копия, Источник, Индекс, СкрытьЗаголовок);
	ИначеЕсли ТипЗнч(Источник) = Тип("ПолеФормы") Тогда
		Если Группа <> Неопределено И СкрытьЗаголовок = Истина Тогда
			Цвет = ?(Группа.ЦветФона.Вид = ВидЦвета.АвтоЦвет, New Цвет(255, 255, 255), Группа.ЦветФона);
		Иначе
			Цвет = Неопределено;
		КонецЕсли;
		СкопироватьПолеФормы(Форма, Источник, Копия, Индекс, Цвет);
		СкопироватьПодчиненныеЭлементы(Форма, Копия.КонтекстноеМеню, Источник.КонтекстноеМеню, Индекс, СкрытьЗаголовок);
	Иначе
		ЗаполнитьЗначенияСвойств(Копия, Источник);
	КонецЕсли;
	Если ЭтоРекурсия = Ложь Тогда
		Копия.Видимость = Источник.Видимость;
		Возврат Копия;
	КонецЕсли;
КонецФункции

Процедура СкопироватьПодчиненныеЭлементы(Форма, ГруппаКопии, Источник, Индекс, СкрытьЗаголовок)
	Для Каждого Элемент Из Источник.ПодчиненныеЭлементы Цикл
		СкопироватьЭлемент(Форма, Элемент, Индекс, СкрытьЗаголовок, ГруппаКопии);
	КонецЦикла;
КонецПроцедуры

Процедура СкопироватьПолеФормы(Форма, Источник, Копия, Индекс, ЦветЗаголовка)
	Если ТипЗнч(Источник) = Тип("ПолеФормы") Тогда
		Копия.Вид = Источник.Вид;
		ЛевСкобка = СтрНайти(Источник.ПутьКДанным, "[");
		ПрвСкобка = СтрНайти(Источник.ПутьКДанным, "[");
		Размер = СтрДлина(Источник.ПутьКДанным);
		Если ЛевСкобка = 0 ИЛИ ПрвСкобка = 0 Тогда
			Копия.ПутьКДанным = Источник.ПутьКДанным;
		Иначе
			Копия.ПутьКданным = Лев(Источник.ПутьКДанным, ЛевСкобка) + Индекс + Прав(Источник.ПутьКДанным, Размер - ПрвСкобка - 1);
		КонецЕсли;
		Если Источник.Вид = ВидПоляФормы.ПолеВвода Тогда
			ЗаполнитьЗначенияСвойств(Копия, Источник,, "ВыделенныйТекст, СвязьПоТипу, ПутьКДанным");
			Если Источник.СвязьПоТипу.ПутьКДанным <> "" Тогда
				ПутьКДаннымСвязиПриемника = СтрЗаменить(Источник.СвязьПоТипу.ПутьКДанным, Источник.Имя, Копия.Имя);
				Копия.СвязьПоТипу = New СвязьПоТипу(ПутьКДаннымСвязиПриемника, Источник.СвязьПоТипу.ЭлементСвязи);
			КонецЕсли;
			ЗаполнитьКоллекциюСвойств(Копия.СписокВыбора, Источник.СписокВыбора);
		ИначеЕсли Источник.Вид = ВидПоляФормы.ПолеПереключателя Тогда
			ЗаполнитьКоллекциюСвойств(Копия.СписокВыбора, Источник.СписокВыбора);
			ЗаполнитьЗначенияСвойств(Копия, Источник,,"ПутьКДанным");
		ИначеЕсли Источник.Вид = ВидПоляФормы.ПолеТекстовогоДокумента Тогда
			ЗаполнитьЗначенияСвойств(Копия, Источник,,"ПутьКДанным, ВыделенныйТекст");
		ИначеЕсли Источник.Вид = ВидПоляФормы.ПолеФорматированногоДокумента Тогда
			ЗаполнитьЗначенияСвойств(Копия, Источник,,"ПутьКДанным, ВыделенныйТекст");
		Иначе
			ЗаполнитьЗначенияСвойств(Копия, Источник,,"ПутьКДанным");
		КонецЕсли;
		Если ЦветЗаголовка <> Неопределено Тогда
			Копия.ЦветТекстаЗаголовка = ЦветЗаголовка;
		КонецЕсли;
		СкопироватьСобытия(Копия, Источник);
	КонецЕсли;
КонецПроцедуры

Процедура СкопироватьГруппуФормыБезЭлементов(Форма, Источник, Копия)
	Если ТипЗнч(Источник) = Тип("ГруппаФормы") Тогда
		Копия.Вид = Источник.Вид;
		Если Источник.Вид = ВидГруппыФормы.ОбычнаяГруппа Тогда
			ЗаполнитьЗначенияСвойств(Копия, Источник,, "ПутьКДаннымЗаголовка");
		ИначеЕсли Источник.Вид = ВидГруппыФормы.Страницы Тогда
			ЗаполнитьЗначенияСвойств(Копия, Источник,, "ТекущаяСтраница");
			СкопироватьСобытия(Копия, Источник);
		ИначеЕсли Источник.Вид = ВидГруппыФормы.Страница Тогда
			ЗаполнитьЗначенияСвойств(Копия, Источник,, "ПутьКДаннымЗаголовка");
		ИначеЕсли Источник.Вид = ВидГруппыФормы.ГруппаКолонок Тогда
			ЗаполнитьЗначенияСвойств(Копия, Источник,, "ПутьКДаннымШапки");
		Иначе
			ЗаполнитьЗначенияСвойств(Копия, Источник);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьКоллекциюСвойств(КолекцияКопия, КолекцияИсточник)
	Для Каждого Элемент Из КолекцияИсточник Цикл
		ЗаполнитьЗначенияСвойств(КолекцияКопия.Добавить(), Элемент);
	КонецЦикла;
КонецПроцедуры

Процедура СкопироватьСобытие(Копия, Источник, ИмяСобытия)
	Действие = Источник.ПолучитьДействие(ИмяСобытия);
	Если Действие <> "" Тогда
		Копия.УстановитьДействие(ИмяСобытия, Действие);
	КонецЕсли;
КонецПроцедуры

Процедура СкопироватьСобытия(Копия, Источник)
	СкопироватьСобытие(Копия, Источник, "Приизменении");
	СкопироватьСобытие(Копия, Источник, "НачалоВыбора");
	СкопироватьСобытие(Копия, Источник, "НачалоВыбораИзСписка");
	СкопироватьСобытие(Копия, Источник, "Очистка");
	СкопироватьСобытие(Копия, Источник, "Выбор");
	СкопироватьСобытие(Копия, Источник, "Регулирование");
	СкопироватьСобытие(Копия, Источник, "Открытие");
	СкопироватьСобытие(Копия, Источник, "ОбработкаВыбора");
	СкопироватьСобытие(Копия, Источник, "АвтоПодбор");
	СкопироватьСобытие(Копия, Источник, "ОкончаниеВводаТекста");
	СкопироватьСобытие(Копия, Источник, "ПриОбновленииСоставаПользовательскихНастроекНаСервере");
	СкопироватьСобытие(Копия, Источник, "ПриНачалеРедактирования");
	СкопироватьСобытие(Копия, Источник, "ПередНачаломДобавления");
	СкопироватьСобытие(Копия, Источник, "ПередНачаломизменения");
	СкопироватьСобытие(Копия, Источник, "ПриАктивизацииСтроки");
КонецПроцедуры

Процедура ВывестиСтрокиТаблицыИсточника(Форма, ТаблицаИсточникДанных, ГруппаИсточник, СкрытьЗаголовок = Истина) Экспорт
	#Если Сервер Тогда
		Для Индекс = 0 To ТаблицаИсточникДанных.Количество() - 1 Цикл
			ГруппаКопии = ПолучитьЭлементПоИндексу(Форма, Индекс, ГруппаИсточник.Имя);
			Если ГруппаКопии <> Неопределено Тогда
				ГруппаКопии.Видимость = ГруппаИсточник.Видимость;
			Иначе
				ГруппаКопии = СкопироватьЭлемент(Форма, ГруппаИсточник, Индекс, СкрытьЗаголовок);
			КонецЕсли;
			НайтиКомандуПоШаблонуИУстановитьВидимость(ГруппаКопии, "Удалить", Истина);
		КонецЦикла;
	#Иначе
		ВызватьИсключение("Функция ВывестиСтрокиТаблицыИсточника может быть вызвана только в серверной процедуре!
		|Например, внутри процедуры ПриСозданииНаСервере()" + Символы.ПС + ОписаниеОшибки());
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Асинх Процедура УдалитьСтроку(Форма, ТаблицаИсточникДанных, ГруппаИсточник, ЗадатьВопрос = Ложь, Вопрос = Неопределено) Экспорт
	Строка = ТаблицаИсточникДанных[ПолучитьИндексПоИмени(Форма.ТекущийЭлемент.Имя)];
	Индекс = ТаблицаИсточникДанных.Количество() - 1;
	Вопрос = ?(Вопрос = Неопределено, "Удалить текущую запись?", Вопрос);
	Подтверждено = ?(ЗадатьВопрос = Истина,
	Ждать ВопросАсинх(Вопрос, РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Нет),
	КодВозвратаДиалога.Да);
	Если Подтверждено = КодВозвратаДиалога.Да Тогда
		ТаблицаИсточникДанных.Удалить(Строка);
		ГруппаКопии = ПолучитьЭлементПоИндексу(Форма, Индекс, ГруппаИсточник.Имя);
		Если ГруппаКопии <> Неопределено И ТаблицаИсточникДанных.Количество() <> 0 Тогда
			ГруппаКопии.Видимость = Ложь;
		КонецЕсли;
		#Если ВебКлиент Тогда
			ГруппаРодитель = Форма.Элементы.Найти(ГруппаИсточник.Родитель.Имя);
		#КонецЕсли
		НайтиКомандуПоШаблонуИУстановитьВидимость(ГруппаКопии, "Удалить", Ложь);
		Форма.Модифицированность = Истина;
		#Если ВебКлиент Тогда
			Форма.ОбновитьОтображениеДанных(ГруппаРодитель);
		#КонецЕсли
	КонецЕсли;
КонецПроцедуры
