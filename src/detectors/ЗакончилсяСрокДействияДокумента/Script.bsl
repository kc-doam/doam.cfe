
// Этот фрагмент кода на встроенном языке будет выполняться автоматически
// регламентным заданием "Обработка детекторов бизнес-событий" раз в минуту.
// Если при выполнении этого кода возникнет ошибка, то информация об этом
// будет записана в журнал регистрации.
// Следите за тем, чтобы в этом коде не было бесконечных циклов, т.к. это может
// привести к замедлению работы сервера.
// Не выполняйте в этом коде длительные операции, т.к. это может
// привести к замедлению работы сервера.

// ВКЛАДКА: ОСНОВНОЕ
// =================
// ДЕТЕКТОР БИЗНЕС-СОБЫТИЯ
// Выражение на встроенном языке

Результат = Ложь;
Если БизнесСобытияПовтИсп.ПолучитьИспользоватьБизнесСобытия() Тогда
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Контрагент,
	|	Контрагенты.Ответственный КАК Ответственный
	|ИЗ
	|	РегистрСведений.ДокументыФизическихЛиц КАК ДокументыФизическихЛиц
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МАКСИМУМ(ДокументыФизическихЛиц.Период) КАК Период, // Период = ЗаписьДействуетС
	|			ДокументыФизическихЛиц.Физлицо КАК Физлицо
	|		ИЗ
	|			РегистрСведений.ДокументыФизическихЛиц КАК ДокументыФизическихЛиц
	|		ГДЕ
	|			ДОБАВИТЬКДАТЕ(Физлицо.ДатаРождения, ГОД, 45) <= &ДатаСреза
	|			И Физлицо.ДатаРождения <> ДАТАВРЕМЯ(1, 1, 1) // Пропустить "без Даты рождения"
	|			И ДокументыФизическихЛиц.ЯвляетсяДокументомУдостоверяющимЛичность
	|			И ДокументыФизическихЛиц.Период <= &ДатаСреза
	|
	|		СГРУППИРОВАТЬ ПО ДокументыФизическихЛиц.Физлицо) КАК ДокументыСрез
	|
	|	ПО ДокументыФизическихЛиц.Период = ДокументыСрез.Период
	|		И ДокументыФизическихЛиц.Физлицо = ДокументыСрез.Физлицо
	|		И ДокументыФизическихЛиц.ЯвляетсяДокументомУдостоверяющимЛичность
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПроизошедшиеБизнесСобытия КАК ПроизошедшиеБизнесСобытия
	|			ПО Контрагенты.Ссылка = ПроизошедшиеБизнесСобытия.Источник
	|					И ПроизошедшиеБизнесСобытия.ВидСобытия = &ВидСобытия
	|					И ПроизошедшиеБизнесСобытия.Период >= &ДатаСреза
	|		ПО ДокументыФизическихЛиц.Физлицо = Контрагенты.ФизЛицо
	|ГДЕ
	|	ДОБАВИТЬКДАТЕ(ДокументыФизическихЛиц.ДатаВыдачи, ГОД, 27) <= &ДатаСреза // Если не первый документ, то оповещения не будет
	|	И ДокументыФизическихЛиц.ДатаВыдачи <> ДАТАВРЕМЯ(1, 1, 1) // Если "без Даты выдачи", то нужно сравнивать с "Период"
	|	//И ДокументыФизическихЛиц.СрокДействия <> ДАТАВРЕМЯ(1, 1, 1) // Может быть +1 МЕСЯЦ, а может 3999 ГОД
	|	И ПроизошедшиеБизнесСобытия.Источник ЕСТЬ NULL";
	
	
	ВидСобытия			= Справочники.ВидыБизнесСобытий.НайтиПоНаименованию("Закончился срок действия документа", ИСТИНА);
	Пользователь		= Справочники.Пользователи.НайтиПоНаименованию("Администратор", ИСТИНА); //ВыборкаДетальныеЗаписи.Ответственный;
	
	Запрос.УстановитьПараметр("ДатаСреза", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ВидСобытия", ВидСобытия);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Объектсобытия = ВыборкаДетальныеЗаписи.Контрагент;
		
		УстановитьПривилегированныйРежим(Истина);
		БизнесСобытияВызовСервера.ЗарегистрироватьСобытие(Объектсобытия, ВидСобытия, , Пользователь);
		УстановитьПривилегированныйРежим(Ложь);
	КонецЦикла;
КонецЕсли;


// ВКЛАДКА: ОБРАБОТЧИКИ
// ====================
// КОД ОБРАБОТКИ СОБЫТИЯ

Объектсобытия			= Событие.Источник;
ОбъектПодписки			= Справочники.Контрагенты.ПустаяСсылка();
ВидСобытия 				= Перечисления.СобытияУведомлений.ЗакончилсяСрокДействияДокумента;
Пользователь			= Событие.Источник.Ответственный;
СпособУведомления		= Перечисления.СпособыУведомления.Окном;
ДополнительноеОписание	= "";

РегистрыСведений.ОчередьУведомлений.ДобавитьУведомление(
	Пользователь, ВидСобытия, СпособУведомления, Объектсобытия, ОбъектПодписки, ДополнительноеОписание);


// КОД ОТМЕНЫ ОБРАБОТКИ СОБЫТИЯ
